//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Account_AccountTypeLookup", "AccountTypeLookup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.AccountTypeLookup), "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Account), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_BankAccount_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Account), "BankAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(eConcierge.Domain.BankAccount), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Deposit_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Account), "Deposit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Deposit), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_InvestmentAccount_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Account), "InvestmentAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(eConcierge.Domain.InvestmentAccount), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Nominee_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Account), "Nominee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Nominee), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Treasurer_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Account), "Treasurer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Treasurer), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Withdrawal_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Account), "Withdrawal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Withdrawal), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Cheque_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Transaction), "Cheque", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Cheque), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_InvestmentAccount_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Contact), "InvestmentAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.InvestmentAccount), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Member_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Contact), "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Member), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Nominee_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Contact), "Nominee", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Nominee), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Treasurer_Contact", "Contact", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Contact), "Treasurer", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Treasurer), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Deposit_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Transaction), "Deposit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Deposit), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_InvestmentAccount_Member", "Member", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Member), "InvestmentAccount", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.InvestmentAccount), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Transaction_TransactionType", "TransactionType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.TransactionType), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Transaction), true)]
[assembly: EdmRelationshipAttribute("eConciergeModel", "FK_Withdrawal_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(eConcierge.Domain.Transaction), "Withdrawal", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(eConcierge.Domain.Withdrawal), true)]

#endregion

namespace eConcierge.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class eConciergeEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new eConciergeEntities object using the connection string found in the 'eConciergeEntities' section of the application configuration file.
        /// </summary>
        public eConciergeEntities() : base("name=eConciergeEntities", "eConciergeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eConciergeEntities object.
        /// </summary>
        public eConciergeEntities(string connectionString) : base(connectionString, "eConciergeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new eConciergeEntities object.
        /// </summary>
        public eConciergeEntities(EntityConnection connection) : base(connection, "eConciergeEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Accounts
        {
            get
            {
                if ((_Accounts == null))
                {
                    _Accounts = base.CreateObjectSet<Account>("Accounts");
                }
                return _Accounts;
            }
        }
        private ObjectSet<Account> _Accounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountTypeLookup> AccountTypeLookups
        {
            get
            {
                if ((_AccountTypeLookups == null))
                {
                    _AccountTypeLookups = base.CreateObjectSet<AccountTypeLookup>("AccountTypeLookups");
                }
                return _AccountTypeLookups;
            }
        }
        private ObjectSet<AccountTypeLookup> _AccountTypeLookups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BankAccount> BankAccounts
        {
            get
            {
                if ((_BankAccounts == null))
                {
                    _BankAccounts = base.CreateObjectSet<BankAccount>("BankAccounts");
                }
                return _BankAccounts;
            }
        }
        private ObjectSet<BankAccount> _BankAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cheque> Cheques
        {
            get
            {
                if ((_Cheques == null))
                {
                    _Cheques = base.CreateObjectSet<Cheque>("Cheques");
                }
                return _Cheques;
            }
        }
        private ObjectSet<Cheque> _Cheques;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Contact> Contacts
        {
            get
            {
                if ((_Contacts == null))
                {
                    _Contacts = base.CreateObjectSet<Contact>("Contacts");
                }
                return _Contacts;
            }
        }
        private ObjectSet<Contact> _Contacts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Deposit> Deposits
        {
            get
            {
                if ((_Deposits == null))
                {
                    _Deposits = base.CreateObjectSet<Deposit>("Deposits");
                }
                return _Deposits;
            }
        }
        private ObjectSet<Deposit> _Deposits;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InvestmentAccount> InvestmentAccounts
        {
            get
            {
                if ((_InvestmentAccounts == null))
                {
                    _InvestmentAccounts = base.CreateObjectSet<InvestmentAccount>("InvestmentAccounts");
                }
                return _InvestmentAccounts;
            }
        }
        private ObjectSet<InvestmentAccount> _InvestmentAccounts;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Member> Members
        {
            get
            {
                if ((_Members == null))
                {
                    _Members = base.CreateObjectSet<Member>("Members");
                }
                return _Members;
            }
        }
        private ObjectSet<Member> _Members;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Nominee> Nominees
        {
            get
            {
                if ((_Nominees == null))
                {
                    _Nominees = base.CreateObjectSet<Nominee>("Nominees");
                }
                return _Nominees;
            }
        }
        private ObjectSet<Nominee> _Nominees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transactions
        {
            get
            {
                if ((_Transactions == null))
                {
                    _Transactions = base.CreateObjectSet<Transaction>("Transactions");
                }
                return _Transactions;
            }
        }
        private ObjectSet<Transaction> _Transactions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionType> TransactionTypes
        {
            get
            {
                if ((_TransactionTypes == null))
                {
                    _TransactionTypes = base.CreateObjectSet<TransactionType>("TransactionTypes");
                }
                return _TransactionTypes;
            }
        }
        private ObjectSet<TransactionType> _TransactionTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Treasurer> Treasurers
        {
            get
            {
                if ((_Treasurers == null))
                {
                    _Treasurers = base.CreateObjectSet<Treasurer>("Treasurers");
                }
                return _Treasurers;
            }
        }
        private ObjectSet<Treasurer> _Treasurers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Withdrawal> Withdrawals
        {
            get
            {
                if ((_Withdrawals == null))
                {
                    _Withdrawals = base.CreateObjectSet<Withdrawal>("Withdrawals");
                }
                return _Withdrawals;
            }
        }
        private ObjectSet<Withdrawal> _Withdrawals;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Accounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccounts(Account account)
        {
            base.AddObject("Accounts", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountTypeLookups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountTypeLookups(AccountTypeLookup accountTypeLookup)
        {
            base.AddObject("AccountTypeLookups", accountTypeLookup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BankAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBankAccounts(BankAccount bankAccount)
        {
            base.AddObject("BankAccounts", bankAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cheques EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCheques(Cheque cheque)
        {
            base.AddObject("Cheques", cheque);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Contacts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToContacts(Contact contact)
        {
            base.AddObject("Contacts", contact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Deposits EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDeposits(Deposit deposit)
        {
            base.AddObject("Deposits", deposit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InvestmentAccounts EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvestmentAccounts(InvestmentAccount investmentAccount)
        {
            base.AddObject("InvestmentAccounts", investmentAccount);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Members EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMembers(Member member)
        {
            base.AddObject("Members", member);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Nominees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNominees(Nominee nominee)
        {
            base.AddObject("Nominees", nominee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transactions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactions(Transaction transaction)
        {
            base.AddObject("Transactions", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionTypes(TransactionType transactionType)
        {
            base.AddObject("TransactionTypes", transactionType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Treasurers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreasurers(Treasurer treasurer)
        {
            base.AddObject("Treasurers", treasurer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Withdrawals EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWithdrawals(Withdrawal withdrawal)
        {
            base.AddObject("Withdrawals", withdrawal);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="createDate">Initial value of the CreateDate property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="balance">Initial value of the Balance property.</param>
        public static Account CreateAccount(global::System.Decimal id, global::System.DateTime createDate, global::System.Decimal typeId, global::System.Decimal balance)
        {
            Account account = new Account();
            account.Id = id;
            account.CreateDate = createDate;
            account.TypeId = typeId;
            account.Balance = balance;
            return account;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Decimal _TypeId;
        partial void OnTypeIdChanging(global::System.Decimal value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Balance
        {
            get
            {
                return _Balance;
            }
            set
            {
                OnBalanceChanging(value);
                ReportPropertyChanging("Balance");
                _Balance = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Balance");
                OnBalanceChanged();
            }
        }
        private global::System.Decimal _Balance;
        partial void OnBalanceChanging(global::System.Decimal value);
        partial void OnBalanceChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Account_AccountTypeLookup", "AccountTypeLookup")]
        public AccountTypeLookup AccountTypeLookup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountTypeLookup>("eConciergeModel.FK_Account_AccountTypeLookup", "AccountTypeLookup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountTypeLookup>("eConciergeModel.FK_Account_AccountTypeLookup", "AccountTypeLookup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountTypeLookup> AccountTypeLookupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountTypeLookup>("eConciergeModel.FK_Account_AccountTypeLookup", "AccountTypeLookup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountTypeLookup>("eConciergeModel.FK_Account_AccountTypeLookup", "AccountTypeLookup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_BankAccount_Account", "BankAccount")]
        public BankAccount BankAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccount>("eConciergeModel.FK_BankAccount_Account", "BankAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccount>("eConciergeModel.FK_BankAccount_Account", "BankAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BankAccount> BankAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BankAccount>("eConciergeModel.FK_BankAccount_Account", "BankAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BankAccount>("eConciergeModel.FK_BankAccount_Account", "BankAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Deposit_Account", "Deposit")]
        public EntityCollection<Deposit> Deposits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deposit>("eConciergeModel.FK_Deposit_Account", "Deposit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deposit>("eConciergeModel.FK_Deposit_Account", "Deposit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_InvestmentAccount_Account", "InvestmentAccount")]
        public InvestmentAccount InvestmentAccount
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Account", "InvestmentAccount").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Account", "InvestmentAccount").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<InvestmentAccount> InvestmentAccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Account", "InvestmentAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Account", "InvestmentAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Nominee_Account", "Nominee")]
        public EntityCollection<Nominee> Nominees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Nominee>("eConciergeModel.FK_Nominee_Account", "Nominee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Nominee>("eConciergeModel.FK_Nominee_Account", "Nominee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Treasurer_Account", "Treasurer")]
        public EntityCollection<Treasurer> Treasurers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Treasurer>("eConciergeModel.FK_Treasurer_Account", "Treasurer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Treasurer>("eConciergeModel.FK_Treasurer_Account", "Treasurer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Withdrawal_Account", "Withdrawal")]
        public EntityCollection<Withdrawal> Withdrawals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Withdrawal>("eConciergeModel.FK_Withdrawal_Account", "Withdrawal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Withdrawal>("eConciergeModel.FK_Withdrawal_Account", "Withdrawal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="AccountTypeLookup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountTypeLookup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountTypeLookup object.
        /// </summary>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static AccountTypeLookup CreateAccountTypeLookup(global::System.Decimal typeId, global::System.String description)
        {
            AccountTypeLookup accountTypeLookup = new AccountTypeLookup();
            accountTypeLookup.TypeId = typeId;
            accountTypeLookup.Description = description;
            return accountTypeLookup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                if (_TypeId != value)
                {
                    OnTypeIdChanging(value);
                    ReportPropertyChanging("TypeId");
                    _TypeId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TypeId");
                    OnTypeIdChanged();
                }
            }
        }
        private global::System.Decimal _TypeId;
        partial void OnTypeIdChanging(global::System.Decimal value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Account_AccountTypeLookup", "Account")]
        public EntityCollection<Account> Accounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Account>("eConciergeModel.FK_Account_AccountTypeLookup", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Account>("eConciergeModel.FK_Account_AccountTypeLookup", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="BankAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BankAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BankAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="bankAccountNo">Initial value of the BankAccountNo property.</param>
        public static BankAccount CreateBankAccount(global::System.Decimal id, global::System.String bankAccountNo)
        {
            BankAccount bankAccount = new BankAccount();
            bankAccount.Id = id;
            bankAccount.BankAccountNo = bankAccountNo;
            return bankAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankAccountNo
        {
            get
            {
                return _BankAccountNo;
            }
            set
            {
                OnBankAccountNoChanging(value);
                ReportPropertyChanging("BankAccountNo");
                _BankAccountNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BankAccountNo");
                OnBankAccountNoChanged();
            }
        }
        private global::System.String _BankAccountNo;
        partial void OnBankAccountNoChanging(global::System.String value);
        partial void OnBankAccountNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_BankAccount_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_BankAccount_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_BankAccount_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_BankAccount_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("eConciergeModel.FK_BankAccount_Account", "Account", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Cheque")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cheque : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cheque object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="chequeNo">Initial value of the ChequeNo property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="bankName">Initial value of the BankName property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Cheque CreateCheque(global::System.Decimal id, global::System.String chequeNo, global::System.String name, global::System.String bankName, global::System.Decimal transactionId, global::System.Decimal amount)
        {
            Cheque cheque = new Cheque();
            cheque.Id = id;
            cheque.ChequeNo = chequeNo;
            cheque.Name = name;
            cheque.BankName = bankName;
            cheque.TransactionId = transactionId;
            cheque.Amount = amount;
            return cheque;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChequeNo
        {
            get
            {
                return _ChequeNo;
            }
            set
            {
                OnChequeNoChanging(value);
                ReportPropertyChanging("ChequeNo");
                _ChequeNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChequeNo");
                OnChequeNoChanged();
            }
        }
        private global::System.String _ChequeNo;
        partial void OnChequeNoChanging(global::System.String value);
        partial void OnChequeNoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BankName
        {
            get
            {
                return _BankName;
            }
            set
            {
                OnBankNameChanging(value);
                ReportPropertyChanging("BankName");
                _BankName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BankName");
                OnBankNameChanged();
            }
        }
        private global::System.String _BankName;
        partial void OnBankNameChanging(global::System.String value);
        partial void OnBankNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BranchName
        {
            get
            {
                return _BranchName;
            }
            set
            {
                OnBranchNameChanging(value);
                ReportPropertyChanging("BranchName");
                _BranchName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BranchName");
                OnBranchNameChanged();
            }
        }
        private global::System.String _BranchName;
        partial void OnBranchNameChanging(global::System.String value);
        partial void OnBranchNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Decimal _TransactionId;
        partial void OnTransactionIdChanging(global::System.Decimal value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Cheque_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Cheque_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Cheque_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Cheque_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("eConciergeModel.FK_Cheque_Transaction", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Contact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Contact object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="gender">Initial value of the Gender property.</param>
        /// <param name="dateOfBirth">Initial value of the DateOfBirth property.</param>
        /// <param name="contactNo">Initial value of the ContactNo property.</param>
        public static Contact CreateContact(global::System.Decimal id, global::System.String name, global::System.String address, global::System.String gender, global::System.DateTime dateOfBirth, global::System.String contactNo)
        {
            Contact contact = new Contact();
            contact.Id = id;
            contact.Name = name;
            contact.Address = address;
            contact.Gender = gender;
            contact.DateOfBirth = dateOfBirth;
            contact.ContactNo = contactNo;
            return contact;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfBirth
        {
            get
            {
                return _DateOfBirth;
            }
            set
            {
                OnDateOfBirthChanging(value);
                ReportPropertyChanging("DateOfBirth");
                _DateOfBirth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfBirth");
                OnDateOfBirthChanged();
            }
        }
        private global::System.DateTime _DateOfBirth;
        partial void OnDateOfBirthChanging(global::System.DateTime value);
        partial void OnDateOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactNo
        {
            get
            {
                return _ContactNo;
            }
            set
            {
                OnContactNoChanging(value);
                ReportPropertyChanging("ContactNo");
                _ContactNo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactNo");
                OnContactNoChanged();
            }
        }
        private global::System.String _ContactNo;
        partial void OnContactNoChanging(global::System.String value);
        partial void OnContactNoChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_InvestmentAccount_Contact", "InvestmentAccount")]
        public EntityCollection<InvestmentAccount> InvestmentAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Contact", "InvestmentAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Contact", "InvestmentAccount", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Member_Contact", "Member")]
        public EntityCollection<Member> Members
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Member>("eConciergeModel.FK_Member_Contact", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Member>("eConciergeModel.FK_Member_Contact", "Member", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Nominee_Contact", "Nominee")]
        public EntityCollection<Nominee> Nominees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Nominee>("eConciergeModel.FK_Nominee_Contact", "Nominee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Nominee>("eConciergeModel.FK_Nominee_Contact", "Nominee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Treasurer_Contact", "Treasurer")]
        public EntityCollection<Treasurer> Treasurers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Treasurer>("eConciergeModel.FK_Treasurer_Contact", "Treasurer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Treasurer>("eConciergeModel.FK_Treasurer_Contact", "Treasurer", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Deposit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Deposit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Deposit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Deposit CreateDeposit(global::System.Decimal id, global::System.Decimal transactionId, global::System.Decimal accountId, global::System.Decimal amount)
        {
            Deposit deposit = new Deposit();
            deposit.Id = id;
            deposit.TransactionId = transactionId;
            deposit.AccountId = accountId;
            deposit.Amount = amount;
            return deposit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Decimal _TransactionId;
        partial void OnTransactionIdChanging(global::System.Decimal value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Decimal _AccountId;
        partial void OnAccountIdChanging(global::System.Decimal value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Deposit_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Deposit_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Deposit_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Deposit_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("eConciergeModel.FK_Deposit_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Deposit_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Deposit_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Deposit_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Deposit_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("eConciergeModel.FK_Deposit_Transaction", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="InvestmentAccount")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InvestmentAccount : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InvestmentAccount object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="accountHolderId">Initial value of the AccountHolderId property.</param>
        /// <param name="memberId">Initial value of the MemberId property.</param>
        public static InvestmentAccount CreateInvestmentAccount(global::System.Decimal id, global::System.Decimal accountHolderId, global::System.Decimal memberId)
        {
            InvestmentAccount investmentAccount = new InvestmentAccount();
            investmentAccount.Id = id;
            investmentAccount.AccountHolderId = accountHolderId;
            investmentAccount.MemberId = memberId;
            return investmentAccount;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AccountHolderId
        {
            get
            {
                return _AccountHolderId;
            }
            set
            {
                OnAccountHolderIdChanging(value);
                ReportPropertyChanging("AccountHolderId");
                _AccountHolderId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountHolderId");
                OnAccountHolderIdChanged();
            }
        }
        private global::System.Decimal _AccountHolderId;
        partial void OnAccountHolderIdChanging(global::System.Decimal value);
        partial void OnAccountHolderIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal MemberId
        {
            get
            {
                return _MemberId;
            }
            set
            {
                OnMemberIdChanging(value);
                ReportPropertyChanging("MemberId");
                _MemberId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MemberId");
                OnMemberIdChanged();
            }
        }
        private global::System.Decimal _MemberId;
        partial void OnMemberIdChanging(global::System.Decimal value);
        partial void OnMemberIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_InvestmentAccount_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_InvestmentAccount_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_InvestmentAccount_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_InvestmentAccount_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("eConciergeModel.FK_InvestmentAccount_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_InvestmentAccount_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_InvestmentAccount_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_InvestmentAccount_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_InvestmentAccount_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("eConciergeModel.FK_InvestmentAccount_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_InvestmentAccount_Member", "Member")]
        public Member Member
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("eConciergeModel.FK_InvestmentAccount_Member", "Member").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("eConciergeModel.FK_InvestmentAccount_Member", "Member").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Member> MemberReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Member>("eConciergeModel.FK_InvestmentAccount_Member", "Member");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Member>("eConciergeModel.FK_InvestmentAccount_Member", "Member", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Member")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Member : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Member object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="personId">Initial value of the PersonId property.</param>
        /// <param name="membershipDate">Initial value of the MembershipDate property.</param>
        /// <param name="kAZEmployeeId">Initial value of the KAZEmployeeId property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        public static Member CreateMember(global::System.Decimal id, global::System.Decimal personId, global::System.DateTime membershipDate, global::System.String kAZEmployeeId, global::System.Boolean isActive)
        {
            Member member = new Member();
            member.Id = id;
            member.PersonId = personId;
            member.MembershipDate = membershipDate;
            member.KAZEmployeeId = kAZEmployeeId;
            member.IsActive = isActive;
            return member;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal PersonId
        {
            get
            {
                return _PersonId;
            }
            set
            {
                OnPersonIdChanging(value);
                ReportPropertyChanging("PersonId");
                _PersonId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PersonId");
                OnPersonIdChanged();
            }
        }
        private global::System.Decimal _PersonId;
        partial void OnPersonIdChanging(global::System.Decimal value);
        partial void OnPersonIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MembershipDate
        {
            get
            {
                return _MembershipDate;
            }
            set
            {
                OnMembershipDateChanging(value);
                ReportPropertyChanging("MembershipDate");
                _MembershipDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MembershipDate");
                OnMembershipDateChanged();
            }
        }
        private global::System.DateTime _MembershipDate;
        partial void OnMembershipDateChanging(global::System.DateTime value);
        partial void OnMembershipDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String KAZEmployeeId
        {
            get
            {
                return _KAZEmployeeId;
            }
            set
            {
                OnKAZEmployeeIdChanging(value);
                ReportPropertyChanging("KAZEmployeeId");
                _KAZEmployeeId = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("KAZEmployeeId");
                OnKAZEmployeeIdChanged();
            }
        }
        private global::System.String _KAZEmployeeId;
        partial void OnKAZEmployeeIdChanging(global::System.String value);
        partial void OnKAZEmployeeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Member_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Member_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Member_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Member_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("eConciergeModel.FK_Member_Contact", "Contact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_InvestmentAccount_Member", "InvestmentAccount")]
        public EntityCollection<InvestmentAccount> InvestmentAccounts
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Member", "InvestmentAccount");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InvestmentAccount>("eConciergeModel.FK_InvestmentAccount_Member", "InvestmentAccount", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Nominee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Nominee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Nominee object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="percentage">Initial value of the Percentage property.</param>
        public static Nominee CreateNominee(global::System.Decimal id, global::System.Decimal contactId, global::System.Decimal accountId, global::System.Decimal percentage)
        {
            Nominee nominee = new Nominee();
            nominee.Id = id;
            nominee.ContactId = contactId;
            nominee.AccountId = accountId;
            nominee.Percentage = percentage;
            return nominee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private global::System.Decimal _ContactId;
        partial void OnContactIdChanging(global::System.Decimal value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Decimal _AccountId;
        partial void OnAccountIdChanging(global::System.Decimal value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Percentage
        {
            get
            {
                return _Percentage;
            }
            set
            {
                OnPercentageChanging(value);
                ReportPropertyChanging("Percentage");
                _Percentage = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Percentage");
                OnPercentageChanged();
            }
        }
        private global::System.Decimal _Percentage;
        partial void OnPercentageChanging(global::System.Decimal value);
        partial void OnPercentageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CreateDate;
        partial void OnCreateDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCreateDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsActive;
        partial void OnIsActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnIsActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Nominee_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Nominee_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Nominee_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Nominee_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("eConciergeModel.FK_Nominee_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Nominee_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Nominee_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Nominee_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Nominee_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("eConciergeModel.FK_Nominee_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        public static Transaction CreateTransaction(global::System.Decimal id, global::System.DateTime date, global::System.Decimal type)
        {
            Transaction transaction = new Transaction();
            transaction.Id = id;
            transaction.Date = date;
            transaction.Type = type;
            return transaction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Decimal _Type;
        partial void OnTypeChanging(global::System.Decimal value);
        partial void OnTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Cheque_Transaction", "Cheque")]
        public EntityCollection<Cheque> Cheques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Cheque>("eConciergeModel.FK_Cheque_Transaction", "Cheque");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Cheque>("eConciergeModel.FK_Cheque_Transaction", "Cheque", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Deposit_Transaction", "Deposit")]
        public EntityCollection<Deposit> Deposits
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deposit>("eConciergeModel.FK_Deposit_Transaction", "Deposit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deposit>("eConciergeModel.FK_Deposit_Transaction", "Deposit", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Transaction_TransactionType", "TransactionType")]
        public TransactionType TransactionType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("eConciergeModel.FK_Transaction_TransactionType", "TransactionType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("eConciergeModel.FK_Transaction_TransactionType", "TransactionType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<TransactionType> TransactionTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<TransactionType>("eConciergeModel.FK_Transaction_TransactionType", "TransactionType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<TransactionType>("eConciergeModel.FK_Transaction_TransactionType", "TransactionType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Withdrawal_Transaction", "Withdrawal")]
        public EntityCollection<Withdrawal> Withdrawals
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Withdrawal>("eConciergeModel.FK_Withdrawal_Transaction", "Withdrawal");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Withdrawal>("eConciergeModel.FK_Withdrawal_Transaction", "Withdrawal", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="TransactionType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        public static TransactionType CreateTransactionType(global::System.Decimal id, global::System.String title)
        {
            TransactionType transactionType = new TransactionType();
            transactionType.Id = id;
            transactionType.Title = title;
            return transactionType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }
        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Transaction_TransactionType", "Transaction")]
        public EntityCollection<Transaction> Transactions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("eConciergeModel.FK_Transaction_TransactionType", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("eConciergeModel.FK_Transaction_TransactionType", "Transaction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Treasurer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Treasurer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Treasurer object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="contactId">Initial value of the ContactId property.</param>
        /// <param name="apointmentDate">Initial value of the ApointmentDate property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        public static Treasurer CreateTreasurer(global::System.Decimal id, global::System.Decimal contactId, global::System.DateTime apointmentDate, global::System.Boolean isActive, global::System.Decimal accountId)
        {
            Treasurer treasurer = new Treasurer();
            treasurer.Id = id;
            treasurer.ContactId = contactId;
            treasurer.ApointmentDate = apointmentDate;
            treasurer.IsActive = isActive;
            treasurer.AccountId = accountId;
            return treasurer;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal ContactId
        {
            get
            {
                return _ContactId;
            }
            set
            {
                OnContactIdChanging(value);
                ReportPropertyChanging("ContactId");
                _ContactId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ContactId");
                OnContactIdChanged();
            }
        }
        private global::System.Decimal _ContactId;
        partial void OnContactIdChanging(global::System.Decimal value);
        partial void OnContactIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ApointmentDate
        {
            get
            {
                return _ApointmentDate;
            }
            set
            {
                OnApointmentDateChanging(value);
                ReportPropertyChanging("ApointmentDate");
                _ApointmentDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApointmentDate");
                OnApointmentDateChanged();
            }
        }
        private global::System.DateTime _ApointmentDate;
        partial void OnApointmentDateChanging(global::System.DateTime value);
        partial void OnApointmentDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Decimal _AccountId;
        partial void OnAccountIdChanging(global::System.Decimal value);
        partial void OnAccountIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Treasurer_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Treasurer_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Treasurer_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Treasurer_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("eConciergeModel.FK_Treasurer_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Treasurer_Contact", "Contact")]
        public Contact Contact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Treasurer_Contact", "Contact").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Treasurer_Contact", "Contact").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contact> ContactReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("eConciergeModel.FK_Treasurer_Contact", "Contact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("eConciergeModel.FK_Treasurer_Contact", "Contact", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="eConciergeModel", Name="Withdrawal")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Withdrawal : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Withdrawal object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="transactionId">Initial value of the TransactionId property.</param>
        /// <param name="accountId">Initial value of the AccountId property.</param>
        /// <param name="amount">Initial value of the Amount property.</param>
        public static Withdrawal CreateWithdrawal(global::System.Decimal id, global::System.Decimal transactionId, global::System.Decimal accountId, global::System.Decimal amount)
        {
            Withdrawal withdrawal = new Withdrawal();
            withdrawal.Id = id;
            withdrawal.TransactionId = transactionId;
            withdrawal.AccountId = accountId;
            withdrawal.Amount = amount;
            return withdrawal;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Decimal _Id;
        partial void OnIdChanging(global::System.Decimal value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TransactionId
        {
            get
            {
                return _TransactionId;
            }
            set
            {
                OnTransactionIdChanging(value);
                ReportPropertyChanging("TransactionId");
                _TransactionId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionId");
                OnTransactionIdChanged();
            }
        }
        private global::System.Decimal _TransactionId;
        partial void OnTransactionIdChanging(global::System.Decimal value);
        partial void OnTransactionIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal AccountId
        {
            get
            {
                return _AccountId;
            }
            set
            {
                OnAccountIdChanging(value);
                ReportPropertyChanging("AccountId");
                _AccountId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountId");
                OnAccountIdChanged();
            }
        }
        private global::System.Decimal _AccountId;
        partial void OnAccountIdChanging(global::System.Decimal value);
        partial void OnAccountIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private global::System.Decimal _Amount;
        partial void OnAmountChanging(global::System.Decimal value);
        partial void OnAmountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Withdrawal_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Withdrawal_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Withdrawal_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("eConciergeModel.FK_Withdrawal_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("eConciergeModel.FK_Withdrawal_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("eConciergeModel", "FK_Withdrawal_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Withdrawal_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Withdrawal_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("eConciergeModel.FK_Withdrawal_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("eConciergeModel.FK_Withdrawal_Transaction", "Transaction", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
